Domain: "Customer Relationship Management (CRM) Website"

Objective: > 
  Design and implement a web-based CRM platform that allows businesses to manage customer interactions, sales, and analytics. The system should include the following capabilities: - A user-friendly interface for managing customer data, tracking interactions, and organizing sales opportunities. - Real-time analytics and reporting tools to provide insights into sales performance, customer behavior, and business metrics. - A robust database for storing customer information, sales leads, and communication history. - User access control to differentiate between administrators, sales reps, and other roles. - Integration with third-party services for email, calendar, and communication tools. - Mobile-friendly design and optimization to ensure usability across devices. - Performance optimization strategies to ensure smooth and responsive user experience even with large data volumes.

  You are tasked with generating comprehensive development artifacts for the above project. Please perform the following steps:

    Requirements Analysis and Flowchart Generation:
        Analyze the objective and identify the core functionalities required for the CRM platform.
        Extract key features such as customer data management, sales tracking, reporting, user access control, and third-party integrations.
        Generate a detailed plain-text flowchart that outlines the overall system development flow, covering data acquisition, user interactions, reporting, and display updates.
        Format your output as a JSON object with a key "flowchart" mapping to the plain-text diagram.

    Component Diagram Creation:
        Based on the requirements and flowchart, generate a comprehensive plain-text component diagram.
        Clearly define system modules including:
            The Customer Management Module responsible for storing and managing customer information.
            The Sales Tracking Module that allows users to create and manage sales opportunities.
            The Analytics and Reporting Module that provides insights into sales, performance, and customer behavior.
            The User Access Module for managing roles and permissions.
            The Third-Party Integration Module to integrate with email, calendar, and communication tools.
            The Frontend User Interface (UI) for providing a seamless experience across devices.
        Format your output as a JSON object with a key "component_diagram" mapping to the diagram details.

    Structured Blueprint of System Components:
        Produce a structured JSON blueprint detailing each system component, its functionality, and interconnections.
        Ensure that the blueprint includes descriptions of how data flows between modules, and specify any key methods or interfaces.
        Format your output as a JSON object with a key "structured_components" mapping to this blueprint.

    High-Level Code Skeleton Generation:
        Generate a high-level code skeleton outlining the main modules, classes, and functions needed to implement the system.
        Include file/module recommendations, class definitions (e.g., CustomerManager, SalesTracker, AnalyticsEngine, UserAccessControl, CRMUI), and brief inline comments explaining each componentâ€™s purpose.
        Format your output as a JSON object with a key "code_skeleton" mapping to the plain-text code skeleton.

  Each output must be a modular, scalable, and maintainable artifact that adheres to modern software engineering best practices. Return ONLY JSON objects with the specified keys, without any additional text.

Tech Stack: "React, Node.js, MongoDB, REST API"

agents: "1,2,3"